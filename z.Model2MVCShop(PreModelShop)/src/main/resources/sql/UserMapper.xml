<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="UserMapper">
 	
 	
	<resultMap id="userSelectMap" type="user">
		<result property="userId" 	column="user_id" 		jdbcType="VARCHAR"/>
		<result property="userName"	column="user_name" 		jdbcType="VARCHAR" />
		<result property="password" column="password" 		jdbcType="VARCHAR" />
		<result property="role" 	column="role" 			jdbcType="VARCHAR" />
		<result property="ssn" 		column="ssn" 			jdbcType="VARCHAR" />
		<result property="phone" 	column="cell_phone" 	jdbcType="VARCHAR" />
		<result property="addr" 	column="addr" 			jdbcType="VARCHAR" />
		<result property="email" 	column="email" 			jdbcType="VARCHAR"  />
		<result property="regDate" 	column="reg_date" 		jdbcType="DATE" />
	</resultMap>
	
	<!-- SQL : INSERT -->
	<insert 	id="addUser"		parameterType="user" >
	 	INSERT
		INTO users( user_id , user_name , password , role , ssn, cell_phone, addr, email , reg_date) 
		VALUES	 (	#{userId} , #{userName} , #{password} , 'user' , #{ssn} , 
							#{phone} , #{addr:VARCHAR} , #{email:VARCHAR} , SYSDATE )
	 </insert>
	 
	 <!-- SQL : SELECT ONE -->
	 <select 	id="getUser"	parameterType="string"	resultMap="userSelectMap">
		SELECT
		user_id , user_name , password , role , ssn, cell_phone ,  addr , email , reg_date 		
		FROM users 
		WHERE user_id = #{userId}
	 </select>
	 
	 <!-- SQL : UPDATE -->
	 <update	id="updateUser"	parameterType="user" >
	   	UPDATE users
	   	<set>
	   		user_name 	= UPPER( #{userName} ),
			cell_phone	= #{phone},
			addr 		= #{addr} ,
			email		= #{email}
	   	</set>
	   	WHERE user_id = #{userId}
	 </update>
		 
	<!-- SQL : SELECT LIST -->
	<select  id="getUserList"  parameterType="search"	resultMap="userSelectMap">
		  	SELECT *
		  	FROM (	SELECT inner_table.* , ROWNUM AS row_seq
		  					FROM		(	SELECT user_id , user_name , email
												FROM users
												<if test="searchCondition != null">
													<where>
														<if test="searchCondition == 0 and searchKeyword !='' ">
											 				user_id LIKE '%${searchKeyword}%'
														</if>
														<if test="searchCondition == 1 and searchKeyword !='' ">
											 				user_name LIKE UPPER('%${searchKeyword}%')
														</if>
													</where>
												</if>
												ORDER BY user_id ) inner_table
							WHERE ROWNUM &lt;= #{endRowNum} )
			WHERE row_seq BETWEEN #{startRowNum} AND #{endRowNum} 
	 </select>
	 	<!--  
	 			<![CDATA[  ~~~  ]]> 를 이용하여 아래와 같이 사용  할 수 있다.
	 			CDATA ==> Character Data 의 의미 Java 에서 \n 같은 특수문자 처리  

				WHERE ROWNUM <![CDATA[ <=]]> #{endRowNum} )
				
				WHERE ROWNUM &lt;= #{endRowNum} )
		-->
	
	<!-- SQL : SELECT ROW Count -->	 
	 <select  id="getTotalCount"  parameterType="search"	 resultType="int">
		 
		  	SELECT COUNT(*)
		  	FROM(	SELECT user_id , user_name , email
							FROM users
							<if test="searchCondition != null">
								<where>
									<if test="searchCondition == 0 and searchKeyword !='' ">
							 			user_id LIKE '%${searchKeyword}%'
									</if>
									<if test="searchCondition == 1 and searchKeyword !='' ">
							 			user_name LIKE UPPER('%${searchKeyword}%')
									</if>
								</where>
							</if> ) countTable						
	 </select>
	 
	 <update id="updateCart" parameterType="java.util.Map">
	 	UPDATE USERS 
	 	<set>
	 		cart = #{cartData}
	 	</set>
	 	WHERE user_id = #{userId}
	 </update>
	 
	 <select id="getCartData" parameterType="java.lang.String" resultType="java.lang.String">
	 	SELECT cart 
	 	FROM USERS 
	 	WHERE user_id = #{userId} 
	 		AND cart IS NOT NULL 
	 </select>
	 
</mapper>